Problem Statement: Given an integer N, return the first N rows of Pascal’s triangle.

In Pascal’s triangle, each number is the sum of the two numbers directly above it






public class Solution {
	public static ArrayList<ArrayList<Long>> printPascal(int n) {
                 // Write your code here.

		    ArrayList<ArrayList<Long>> output = new ArrayList<>();
			
			//if(n == 0) return output;

			ArrayList<Long>first_row = new ArrayList<>();
			first_row.add(1L);
			output.add(first_row);

			for(int i = 1; i < n; i++){
				ArrayList<Long> previous_row = output.get(i-1);
				ArrayList<Long> current_row = new ArrayList<>();

				current_row.add(1L);  

                  for(int j = 1; j < i; j++){
					  current_row.add( previous_row.get(j- 1) + previous_row.get(j) );
				  }

				current_row.add(1L);
				output.add(current_row);
			}

			return output;
			

	}
}	
